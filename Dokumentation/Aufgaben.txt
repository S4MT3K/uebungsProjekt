//erstellt eine funktion die per Übergabe parameter ein array füllt, und dieses zurückgibt
---------------------------

AUFGABE: Erstellt eine Funktion, die per übergabeparameter, ein array wie unseres unten erzeugt.
---------------------------

Aufgabe: Schreibt eine Funktion, die das VORHANDENE Array, welches unseren Müller, Maik beinhaltet, verändern kann.
Zusatz: Ersetzt Maik, durch jemand anderen.

Tipp: Übergabeparameter in eurer Funktion verwenden.

---------------------------
Erstellt eine Funktion, die maik und steffi löschen.

zusatz: erstellt ein array (gerne auch fix) die steffi und maik beinhalten, und löschte diese aus diesem array.
benutzt bitte unset($maik) zum löschen der variable oder unset($maik['key']) zum löschen des key-value pairs

NOTE: wir wollen eigentlich nur im kopf den zusammenhang des löschen verstehen, welcher später in unserer mariadb
abläuft.

---------------------------
Erstellt eine Datenbank User_2406 mit folgenden Inhalten:
Eine Tabelle User mit den Spalten Vorname, Nachname und Alter.
___________________________

Erstellt eine Funktion, die die Datenbank Verbindung herstellt! (getVerbindung)
___________________________

Schreibt die makaeArray() Funktion so um, dass Sie maik in die datenbank einfügt.
Benennt die Funktion zu createUser() um.
ZUSATZ: Funktion benutzt übergabeparameter. Ist also Variabel Nutzbar.

(es wird ein sql stament benötigt und eine datenbank verbindung)
Denkt an prepared statements dabei
___________________________
Schreibt die übrigen 3 Funktionen gemäß ihres Sinns um.
readUser();
updateUser();
deleteUser();

Tipp: es gibt nur 2 User die man per alter, vorname und/oder nachname "suchen" bzw idewntifizieren kann.


############################
############################
############################
############################
#######    CLASSES    ######


AUFAGBE: schreibt eine Methode die die Augenfarbe eines Objektes der klasse Mensch verändern kann
----------------------------

Schreibt eine If anweisung in der Set Groesse Methode, die maximal 280 und minimal 90 engegennimmt.
sollte dieser wert über- oder unterschritten werden, soll ein default wert von 180 gesetzt werden.
----------------------------

AUFGABE: Schreibt die klasse schüler mit folgenden membern/parametern/properties:

vorname
nachname

bildungsgutschein (ja nein)
ausbildungsanfang

VERERBT DABEI BITTE VON DER KLASSE MENSCH!

____________________________
Erstellt die klasse DBConn mit allen erforderlichen gettern settern und konstruktoren!!!!
Zusatz: ersetzt die dbconn funktion in der hello_crud.php und benutzt stattdessen die klassenaufrufe bzw. methoden!
____________________________

Erstellt eine neue Klasse (inkl. Datei) Lebewesen mit den Folgenden Properties DNA als string sichtbarkeit public und der
methode getDNA();
____________________________
Schreibt in der klasse User einen Konstruktor, damit wir diesen bei der erstellung von einem User Objekt callen können um
die benötigten "eigenschaften" der klasse User zu bekommen / füllen!
____________________________

Schreibt bitte für die USer.php bzw. User klasse alle denkbaren und ggf zusätzlich brauchbaren Setter Und getter funktionen!
____________________________

Erweitert die user klasse um eine methode (statisch oder nicht) die die INSTANZEN der User zählen kann.
also ungefähr so

   public static function CountInstances()
    {

    }

    Denkt dabei bitte an etwaige andere benötigte parameter/funktionen/etc.

---------------------------
DATENSTRUKTUR IN DER DATENBANK ANPASSEN!!! Heisst: Unser User soll representativ mit seinen Attributen/parametern
in der Datenbank existieren können.

---------------------------
Die Methode createUser, schreibt uns ja leider nur einen Datenbank eintrag. Wir wollen aber auch weitergehend im Code (index.php)
mit diesem "createten" Objekt arbeiten. das heisst, wir müssten uns aus den eben übergebenen parametern auch ein objekt erstellen.
dieses soll auch in der createUSer Funktion (die ja auch zusätzlich in die DB speichert) passieren.
